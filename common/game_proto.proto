syntax="proto3";
package GameProto;

message Position{
	float x=1;
	float y=2;
	float z=3;
}

//S2C事件码
enum ServerEventCode {
	LogInSuccess = 0;
	RegisterSuccess = 1;
	EnterRoomSuccess = 2;
	
	LogInError_AccountDontExist = 3;
	LogInError_PasswordWrong = 4;
	LogInError_ReLogIn = 5;

	RegisterError_AccountAlreadyExist = 6;
	
	EnterRoomError_DontLogIn = 7;
	EnterRoomError_RoomIsFull = 8;

	InternalError = 9;

    BroadRoomInfo = 10;
	JumpToBattleServer = 11;
	S2CSync = 12;
}

//C2S事件码
enum ClientEventCode {
	LogIn = 0;
	Regist = 1;
    CreateRoom = 2;
	EnterRoom = 3;
	C2SSync = 4;
	Follow = 5;
}

//玩家信息
message PlayerInfo{
    int32 uid = 1;
    string account = 2;
    string password = 3;
    string nickname = 4;
    int32 roomid = 5;
    //后续添加
}
//玩家状态
message PlayerState{
	int32 fid=1;
	string name=2;
	float yaw=3;
	Position pos=4;
	int32 state=5;
}

//玩家一次操作
message PlayerInput{
	string name=1;
	float torque=2;
	bool grasp=3;
	bool attach=4;
}

//房间信息
//房间id 
//每局时间
//局数
//地图名
//房间密码
//最大玩家数量
//准备中的玩家
//未准备的玩家
//房主
message RoomInfo {
    int32 id = 1;
    int32 roundTime = 2;
    int32 roundNumber = 3;
    string roomName =4;
    string mapName = 5;
    string password = 6;
    int32 maxPlayers = 7;
    repeated int32 preparedPlayers = 8;
    repeated int32 unPreparedPlayers = 9;
    int32 master = 10;
}

//客户端数据包
//登录：type=LogIn,playerinfo(account, password)
//注册：type=Regist,playerinfo(account, password, nickname)
//进房间：type=EnterRoom, playerInfo(uid),id=room_id
//同步：type=Sync,input
//追帧：type=Follow, playerinfo(uid),id=fid
message ClientMsg{
	ClientEventCode type=1;
	string name=2;
	string password=3;
	int32 id=4;
    PlayerInfo playerinfo = 5;
	PlayerInput input=6;
}


//服务器数据包
//登录成功：type = LogInSuccess playerinfo(), roominfos
//注册成功：type = RegistSuccess 
//进房间成功：type = EnterRoomSuccess, roominfos
//登录，注册，进房间失败：type=Failure,str
//跳转服务器: type=JumpToBattleServer,str=ip:port
//同步：type = Sync,fid,inputs,(states?)
message ServerMsg{
	ServerEventCode type=1;
	int32 fid=2;
	string str=3;
    PlayerInfo playerInfo = 4;
	repeated PlayerInput inputs=5;
	repeated PlayerState states=6;
    repeated RoomInfo roominfos=7;
}
